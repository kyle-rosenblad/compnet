% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_interaction.R
\name{plot_interaction}
\alias{plot_interaction}
\title{Make an automated plot of the interactive effect of two species' values of the same trait.}
\usage{
plot_interaction(
  mod,
  xvar,
  xlabel,
  orig.scale = TRUE,
  intlevels = c(0.05, 0.5, 0.95),
  ymin = 0,
  ymax = 1,
  ci_width = 0.95,
  grid_size = 100,
  thin = TRUE,
  thin_to = 100
)
}
\arguments{
\item{mod}{An object of class "compnet" created by the buildcompnet() function.}

\item{xvar}{Character string for the name of the trait to be used. Must match the trait name in
the input data used to build the model.}

\item{xlabel}{Optional character string to replace xvar when plotting.}

\item{orig.scale}{Logical value indicating whether to back-transform trait data to the original
scale (TRUE) or leave them with mean zero and unit variance (FALSE).}

\item{intlevels}{Vector of real values on the interval \eqn{[0,1]} indicating what levels of the x
variable to condition on for species B when plotting species A's mean response.}

\item{ymin}{Real number indicating the location of the bottom of the plot's y axis.}

\item{ymax}{Real number indicating the location of the top of the plot's y axis.}

\item{ci_width}{A real number (0,1) describing the desired widths of credible bands. Defaults to 0.95.}

\item{grid_size}{A positive integer defining the number of discrete steps to use in approximating
the shape of mean prediction curves and credible bands. Defaults to 100.}

\item{thin}{Logical value determining whether to use a random subsample of the full posterior sample.}

\item{thin_to}{Integer value determining how many random samples to draw from the full posterior sample if thin=TRUE.}
}
\value{
A ggplot2 graphic.
}
\description{
Make an automated plot of the interactive effect of two species' values of the same trait.
}
\examples{
data(ex_presabs)
data(ex_traits)

# Quick demo run. Will prompt warnings.
# Run with default warmup and iter for good posterior sampling.
ex_compnet <- buildcompnet(presabs=ex_presabs,
spvars_dist_int=ex_traits[c("ndtrait")], warmup=10, iter=20, family='binomial')
plotdata <- plot_interaction(ex_compnet, xvar="ndtrait")
}
